<%- model_class = Manual -%>
<div class="page-header">
  <h1><%=t '.title', :default => [:'helpers.titles.edit', 'Edit %{model}'], :model => model_class.model_name.human.titleize %></h1>
</div>
<%= render :partial => 'form' %>

<style>
  body {
    min-width: 520px;
  }

  .column {
    width: 170px;
    float: left;
    padding-bottom: 100px;
  }

  .portlet {
    margin: 0 1em 1em 0;
    padding: 0.3em;
    width: 100%;
  }

  .portlet-header {
    padding: 0.2em 0.3em;
    margin-bottom: 0.5em;
    position: relative;
  }

  .portlet-toggle {
    position: absolute;
    top: 50%;
    right: 0;
    margin-top: -8px;
  }

  .portlet-content {
    padding: 0.4em;
  }

  .portlet-placeholder {
    border: 1px dotted black;
    margin: 0 1em 1em 0;
    height: 50px;
  }

  .sortable {
    list-style-type: none;
    margin: 0;
    padding: 0;
    width: 100%;
  }

  .sortable li {
    margin: 0 3px 3px 3px;
    padding: 0.4em;
    padding-left: 1.5em;
    font-size: 1.4em;
    height: 50px;
    width: 99%;
  }

  .sortable li span {
    position: absolute;
    margin-left: -1.3em;
  }

  .fa-close {
    cursor: pointer;
  }
</style>

<script>
//    $( function() {
//        $( ".column" ).sortable({
//            connectWith: ".column",
//            handle: ".portlet-header",
//            cancel: ".portlet-toggle",
//            placeholder: "portlet-placeholder ui-corner-all"
//        });
//
//        $( ".portlet" )
//            .addClass( "ui-widget ui-widget-content ui-helper-clearfix ui-corner-all" )
//            .find( ".portlet-header" )
//            .addClass( "ui-widget-header ui-corner-all" )
//            .prepend( "<span class='ui-icon ui-icon-minusthick portlet-toggle'></span>");
//
//        $( ".portlet-toggle" ).on( "click", function() {
//            var icon = $( this );
//            icon.toggleClass( "ui-icon-minusthick ui-icon-plusthick" );
//            icon.closest( ".portlet" ).find( ".portlet-content" ).toggle();
//        });
//    } );

</script>

<script>
    $( function() {
        $(".sortable").sortable();
        $(".sortable").disableSelection();
    } );

    function create_page() {
        $.ajax({
            type: 'POST',
            url: "/manuals/1/pages",
            dataType: 'json',
            success: function (data)
            {
                alert(JSON.stringify(data));
//                $("#page-list").append(data);
//                $("#sortable").trigger("sortupdate");
            },
            error: function (data)
            {
                alert("Connection error.");
            }
        });
    }
</script>

<div id="page-list" class="column" style="width:100%;">
  <p><a onclick="create_page()">No pages found Create page</a></p>
    <% if @pages.any? %>
        <%= render @pages %>
    <% else %>

    <% end %>


  <!--<div class="portlet">-->
    <!--<div class="portlet-header">Page 1</div>-->
    <!--<div class="portlet-content">-->
      <!--<ul class="sortable">-->
        <!--<li class="ui-state-default"><span class="ui-icon ui-icon-arrowthick-2-n-s"></span>Item 1</li>-->
        <!--<li class="ui-state-default"><span class="ui-icon ui-icon-arrowthick-2-n-s"></span>Item 2</li>-->
        <!--<li class="ui-state-default"><span class="ui-icon ui-icon-arrowthick-2-n-s"></span>Item 3</li>-->
      <!--</ul>-->
    <!--</div>-->
  <!--</div>-->

  <!--<div class="portlet">-->
    <!--<div class="portlet-header">Page 2</div>-->
    <!--<div class="portlet-content">-->
      <!--<ul class="sortable">-->
        <!--<li class="ui-state-default"><span class="ui-icon ui-icon-arrowthick-2-n-s"></span>Item 1</li>-->
        <!--<li class="ui-state-default"><span class="ui-icon ui-icon-arrowthick-2-n-s"></span>Item 2</li>-->
        <!--<li class="ui-state-default"><span class="ui-icon ui-icon-arrowthick-2-n-s"></span>Item 3</li>-->
      <!--</ul>-->
    <!--</div>-->
  <!--</div>-->

</div>

<script>
    $(function() {
        $( "#sortable" ).sortable();
        $( "#sortable" ).disableSelection();
    });

  function PageListCtrl($scope)
  {
      var tmpList = [];
      $scope.list = [
          { "id":10, "priority":1, "manual_id":1, "steps": [{ name: "Do good" }, { name: "Do next thing" }] },
          { "id":11, "priority":2, "manual_id":1, "steps": [{ name: "Do good 2" }, { name: "Do next thing 3" }] },
          { "id":12, "priority":3, "manual_id":1, "steps": [{ name: "Do good 3" }] }
      ];

      $scope.sortableOptions = {
          cursor: "move",
          update: function (e, ui) {
              var $list = ui.item.parent();
              $scope.$apply(function () {
                  $scope.currSort = $list.sortable("toArray")

              })
          }
      };

      $scope.syncOrder = function (elemPositions) {
          $scope.list.forEach(function (obj) {
              elemPositions.forEach(function (elemId, index) {
                  var id = parseInt(elemId.replace(/object-/, ''));
                  if (id === obj.id) {
                      obj.priority = index + 1;
                  }
              });
          });
      };

      $scope.addPage = function() {
          $scope.list.push({ "id":0, "priority": list.length + 1, "manual_id":1 });
      }

      $scope.deletePage = function(index) {
          $scope.list.splice(index, 1);
          $('#page-list').sortable();
          $('$page-list').trigger('sortupdate');
      }

      $scope.updateOrder = function (element) {
          $scope.syncOrder(element.sortable('toArray'));
      }
//      this.addPage = function() {
//          alert('TODO: ADD');
////                pagesList.todos.push({ text: pagesList.todoText, done: false });
////                pagesList.todoText = '';
//      };


//            pagesList.remaining = function() {
//                var count = 0;
//                angular.forEach(todoList.todos, function(todo) {
//                    count += todo.done ? 0 : 1;
//                });
//                return count;
//            };

//            pagesList.remove = function() {
//                var oldTodos = todoList.todos;
//                todoList.todos = [];
//                angular.forEach(oldTodos, function(todo) {
//                    if (!todo.done) todoList.todos.push(todo);
//                });
//            };

  }

    var app = angular.module('manualApp', ['ui.sortable'])
        .controller('PageListCtrl', ['$scope', PageListCtrl]);

    app.directive('sortable', function ($timeout) {
        return function ($scope, element, attributes) {
            element.sortable({
                stop : function(event, ui) {
                    $scope.$apply(function () {
                        $scope.updateOrder(element)
//                        $scope.syncOrder(element.sortable('toArray'));
                    });
                }
            });
        };
    });

</script>

<div ng-app="manualApp">
  <h2>Todo</h2>
  <div ng-controller="PageListCtrl">
    <!--<span>{{todoList.remaining()}} of {{todoList.todos.length}} remaining</span>-->
    <!--[ <a href="" ng-click="todoList.archive()">archive</a> ]-->
    <ul id="page-list" sortable>
      <li id="object-{{page.id}}" ng-repeat="page in list">
        <hr>
        <div class="portlet">
          <div  class="portlet-header" style="text-align: center;">
            Page {{page.priority}}
            <span class="glyphicon glyphicon-remove" ng-click="deletePage($index)" style="float: right;"></span>
          </div>
            <div class="portlet-content">
              <ul>
                <li ng-repeat="step in page.steps">{{step.name}}</li>
              </ul>
            </div>
        </div>
        <hr>
      </li>
    </ul>
    <button type="button" class="btn btn-primary" ng-click="addPage()">Add page</button>
    <!--<form ng-submit="todoList.addTodo()">-->
      <!--<input type="text" ng-model="todoList.todoText"  size="30"-->
             <!--placeholder="add new todo here">-->
      <!--<input class="btn-primary" type="submit" value="add">-->
    <!--</form>-->
  </div>
</div>